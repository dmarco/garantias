map $sent_http_content_type $expires {
    "text/html"                 epoch;
    "text/html; charset=utf-8"  epoch;
    default                     off;
}

server {

    #### BACK 
    
    listen      80;
    server_name ${PHPFPM_SERVER_NAME};
     
    root /var/www/html/public;
    index index.php index.html index.htm;

    server_tokens off;
   
    error_log  /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;
    
    location = /favicon.ico {
	    log_not_found off;
	    access_log off;
    }
    
    location = /robots.txt {
    	allow all;
    	log_not_found off;
    	access_log off;
    }
    
    location ~* /(?:uploads|files)/.*\.php$ {
	    deny all;
    }

    
    
     #phpmyadmin
    location  ~ \/pma {
      rewrite ^/pma(/.*)$ $1 break;
      proxy_set_header X-Real-IP  $remote_addr;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header Host $host;
      proxy_pass http://phpmyadmin;
    }
    
    location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
                expires max;
                log_not_found off;
                try_files $uri $uri/ =404;
    } 
    
    location / {
        # if ($request_method = 'OPTIONS') {
        #   add_header 'Access-Control-Max-Age' 1728000;
        #   add_header 'Content-Type' 'text/plain charset=UTF-8';
        #   add_header 'Content-Length' 0;
        #   return 204;
        # }
        
        try_files $uri $uri/ /index.php?$query_string;
        
    }

    location ~ \.php$ {
        try_files $uri index.php =404;
        fastcgi_split_path_info ^(.+?\.php)(/.+)$;
        fastcgi_pass ${PHPFPM}:${PHPFPM_PORT};
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
    }
    
    
    
}





server {
    
    #### FRONT
    
    listen      80;
    server_name ${NODEJS_SERVER_NAME};
    
    error_log  /var/log/nginx/error_node.log;
    access_log /var/log/nginx/access_node.log;
    
    gzip            on;
    gzip_types      text/plain application/xml text/css application/javascript;
    gzip_min_length 1000;
    
    location / {
        expires $expires;

        proxy_redirect                      off;
        proxy_set_header Host               $host;
        proxy_set_header X-Real-IP          $remote_addr;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto  $scheme;
        proxy_read_timeout          1m;
        proxy_connect_timeout       1m;
        proxy_pass                          http://${NODEJS}:${NODEJS_PORT}; # set the adress of the Node.js instance here
    }
    
   location = /api {
        return 302 /api/;
   }
   
   location /api/ {
        expires $expires;
        rewrite ^/api/(.*) /$1 break;
        proxy_redirect                      off;
        proxy_set_header Host               $host;
        proxy_set_header X-Real-IP          $remote_addr;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto  $scheme;
        proxy_hide_header X-powered-by;
        proxy_read_timeout          1m;
        proxy_connect_timeout       1m;
        proxy_pass                          http://${NODEJS_API}:${NODEJS_API_PORT}; # set the adress of the Node.js instance here
    }
    
    
}

server {
    
    #### ADMIN
    
    listen      80;
    server_name ${NODEJSADMIN_SERVER_NAME};
    
    error_log  /var/log/nginx/error_node.log;
    access_log /var/log/nginx/access_node.log;
    
    gzip            on;
    gzip_types      text/plain application/xml text/css application/javascript;
    gzip_min_length 1000;
    
    location / {
        expires $expires;

        proxy_redirect                      off;
        proxy_set_header Host               $host;
        proxy_set_header X-Real-IP          $remote_addr;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto  $scheme;
        proxy_read_timeout          1m;
        proxy_connect_timeout       1m;
        proxy_pass                          http://${NODEJSADMIN}:${NODEJSADMIN_PORT}; # set the adress of the Node.js instance here
    }
    
    
    
    
}